function decorate(block) {
    var _a, _b;
    // Deconstruct the first two divs inside the generated by AEM block
    const [userImg, userName] = block.children;
    const conts = block.querySelectorAll('user-indicator--container');
    // Create container
    const container = document.createElement('div');
    container.classList.add('user-indicator--container');
    if (conts.length === 0) {
        block.append(container);
        container.append(userImg, userName);
    }
    // Add child element into container
    const el = document.querySelectorAll('.userindicator');
    const nav = document.createElement('nav');
    // Nav links
    const ul = document.createElement('ul');
    const links = ['/', 'about', 'contact', 'profile'];
    links.forEach((url, idx) => {
        const li = document.createElement('li');
        const anchor = document.createElement('a');
        if (idx === 0) {
            anchor.href = '/';
        }
        else {
            anchor.href = `/${url}`;
        }
        anchor.innerText = `Link ${idx}`;
        li.append(anchor);
        ul.append(li);
    });
    nav.classList.add('nav');
    nav.append(ul);
    const navs = el[0].querySelectorAll('.nav');
    // // Code was executed 4 times???
    if (navs.length === 0) {
        el[0].prepend(nav);
    }
    // Logout state
    el[1].classList.add('userindicator--is-not-loggedin');
    // Assigning class to use for styling
    userImg.className = 'user-indicator-img';
    userName.className = 'user-indicator-name';
    (_a = userImg.querySelector('div')) === null || _a === void 0 ? void 0 : _a.classList.add('user-indicator-picture');
    (_b = userName.querySelector('div')) === null || _b === void 0 ? void 0 : _b.classList.add('user-indicator-username');
    // Create a custom elements
    const indicator = document.createElement('div');
    indicator.className = 'user-indicator-indicator';
    const indicatorInner = document.createElement('div');
    indicatorInner.className = 'user-indicator-indicator-inner';
    // Added to the parent element
    indicatorInner.append(indicator);
    userImg.append(indicatorInner);
}
export default decorate;
